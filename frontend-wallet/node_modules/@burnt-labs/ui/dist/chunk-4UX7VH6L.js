'use strict';

var chunkPKUHTIDK_js = require('./chunk-PKUHTIDK.js');
var react = require('react');
var jsxRuntime = require('react/jsx-runtime');

function Input(_a) {
  var _b = _a, {
    className,
    placeholder,
    baseInputClassName: baseInputClassName,
    value,
    error,
    onBlur,
    onKeyDown
  } = _b, props = chunkPKUHTIDK_js.__objRest(_b, [
    "className",
    "placeholder",
    // This should only be used for specific classes that can't override the base input styles.
    "baseInputClassName",
    "value",
    "error",
    "onBlur",
    "onKeyDown"
  ]);
  const [isInputFocused, setIsInputFocused] = react.useState(false);
  const handleFocus = () => {
    setIsInputFocused(true);
  };
  const handleBlur = (event) => {
    if (event.target.value === "") {
      setIsInputFocused(false);
    }
    onBlur == null ? void 0 : onBlur(event);
  };
  return /* @__PURE__ */ jsxRuntime.jsxs("div", { className: `ui-relative ui-w-full ui-text-left ${className || ""}`, children: [
    error ? /* @__PURE__ */ jsxRuntime.jsx("p", { className: "ui-right-0 ui-top-2 ui-text-xs ui-absolute ui-text-red-400", children: error }) : null,
    /* @__PURE__ */ jsxRuntime.jsx(
      "label",
      {
        className: `ui-relative ui-z-0 ui-w-auto ui-font-akkuratLL ${isInputFocused || value ? "ui-top-2 ui-text-xs ui-leading-tight" : "ui-top-7"} ui-text-neutral-400`,
        children: placeholder
      }
    ),
    /* @__PURE__ */ jsxRuntime.jsx(
      "input",
      chunkPKUHTIDK_js.__spreadProps(chunkPKUHTIDK_js.__spreadValues({}, props), {
        className: `${baseInputClassName || ""} ui-z-10 ui-block ui-h-8 ui-w-full ui-border-b ui-rounded-none ui-relative ${error ? "ui-border-red-400" : ""} ui-bg-transparent ui-font-akkuratLL ui-py-5 !ui-text-base ui-text-zinc-100 ui-font-normal ui-leading-tight ui-outline-none`,
        onBlur: handleBlur,
        onFocus: handleFocus,
        onKeyDown,
        style: {
          WebkitBorderRadius: "none"
        },
        value
      })
    )
  ] });
}

exports.Input = Input;
