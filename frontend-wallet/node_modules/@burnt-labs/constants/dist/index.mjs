// src/index.ts
var xionCoin = {
  coinDenom: "XION",
  coinMinimalDenom: "uxion",
  coinDecimals: 6,
  gasPriceStep: {
    low: 5e-4,
    average: 1e-3,
    high: 0.01
  }
};
var xionGasValues = {
  gasPrice: "0.001uxion",
  gasAdjustment: 1.4,
  gasAdjustmentMargin: 5e3
};
var commonInfo = {
  rpc: "undefined",
  rest: "undefined",
  chainId: "base",
  chainName: "XION Testnet",
  bip44: {
    coinType: 118
  },
  bech32Config: {
    bech32PrefixAccAddr: "xion",
    bech32PrefixValAddr: "xionvaloper",
    bech32PrefixValPub: "xionvaloperpub",
    bech32PrefixAccPub: "xionpub",
    bech32PrefixConsAddr: "xionvalcons",
    bech32PrefixConsPub: "xionvalconspub"
  },
  stakeCurrency: xionCoin,
  currencies: [xionCoin],
  feeCurrencies: [xionCoin],
  features: ["cosmwasm"]
};
var mainnetChainInfo = {
  ...commonInfo,
  rpc: "https://rpc.xion-mainnet-1.burnt.com:443",
  rest: "https://api.xion-mainnet-1.burnt.com:443",
  chainId: "xion-mainnet-1",
  chainName: "XION Mainnet"
};
var testnetChainInfo = {
  ...commonInfo,
  rpc: "https://rpc.xion-testnet-1.burnt.com:443",
  rest: "https://api.xion-testnet-1.burnt.com:443",
  chainId: "xion-testnet-1",
  chainName: "XION Testnet"
};
var testChainInfo = {
  ...commonInfo,
  rpc: "http://localhost:26657",
  rest: "http://localhost:26656",
  chainId: "xion-local-testnet-1",
  chainName: "XION Testnet Local"
};
var DASHBOARD_URLS = {
  "xion-mainnet-1": "https://settings.mainnet.burnt.com",
  "xion-testnet-1": "https://settings.testnet.burnt.com"
};
var REST_URLS = {
  "xion-mainnet-1": "https://api.xion-mainnet-1.burnt.com:443",
  "xion-testnet-1": "https://api.xion-testnet-1.burnt.com:443"
};
async function fetchConfig(rpcUrl) {
  try {
    const fetchReq = await fetch(`${rpcUrl}/status`);
    if (!fetchReq.ok) {
      throw new Error("Something went wrong querying RPC");
    }
    const data = await fetchReq.json();
    const lookup = data.result.node_info.network;
    const dashboardUrl = DASHBOARD_URLS[lookup];
    const restUrl = REST_URLS[lookup];
    if (!dashboardUrl || !restUrl)
      throw new Error("Network not found.");
    return { dashboardUrl, restUrl };
  } catch (error) {
    throw error;
  }
}

export { fetchConfig, mainnetChainInfo, testChainInfo, testnetChainInfo, xionCoin, xionGasValues };
