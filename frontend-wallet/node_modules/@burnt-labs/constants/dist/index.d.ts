interface Coin {
    coinDenom: string;
    coinMinimalDenom: string;
    coinDecimals: number;
    gasPriceStep: {
        low: number;
        average: number;
        high: number;
    };
}
interface Bech32Config {
    bech32PrefixAccAddr: string;
    bech32PrefixValAddr: string;
    bech32PrefixValPub: string;
    bech32PrefixAccPub: string;
    bech32PrefixConsAddr: string;
    bech32PrefixConsPub: string;
}
interface Bip44 {
    coinType: number;
}
interface ChainInfo {
    rpc: string;
    rest: string;
    chainId: string;
    stakeCurrency: Coin;
    chainName: string;
    bip44: Bip44;
    bech32Config: Bech32Config;
    currencies: Coin[];
    feeCurrencies: Coin[];
    features: string[];
}
declare const xionCoin: Coin;
declare const xionGasValues: {
    gasPrice: string;
    gasAdjustment: number;
    gasAdjustmentMargin: number;
};
declare const mainnetChainInfo: ChainInfo;
declare const testnetChainInfo: ChainInfo;
declare const testChainInfo: ChainInfo;
declare function fetchConfig(rpcUrl: string): Promise<{
    dashboardUrl: string;
    restUrl: string;
}>;

export { ChainInfo, Coin, fetchConfig, mainnetChainInfo, testChainInfo, testnetChainInfo, xionCoin, xionGasValues };
