import { GranteeSignerClient } from '@burnt-labs/abstraxion-core';
import { CosmWasmClient } from '@cosmjs/cosmwasm-stargate';

type SpendLimit = {
    denom: string;
    amount: string;
};
type ContractGrantDescription = string | {
    address: string;
    amounts: SpendLimit[];
};

interface ModalProps {
    onClose: VoidFunction;
}
declare function Abstraxion({ onClose }: ModalProps): JSX.Element | null;
interface AbstraxionConfig {
    contracts?: ContractGrantDescription[];
    rpcUrl?: string;
    restUrl?: string;
    stake?: boolean;
    bank?: SpendLimit[];
    callbackUrl?: string;
    treasury?: string;
    gasPrice?: string;
}
declare function AbstraxionProvider({ children, config, }: {
    children: React.ReactNode;
    config: AbstraxionConfig;
}): JSX.Element;

interface AbstraxionAccount {
    bech32Address: string;
}
interface AbstraxionAccountState {
    data: AbstraxionAccount;
    isConnected: boolean;
    isConnecting: boolean;
}
declare const useAbstraxionAccount: () => AbstraxionAccountState;

declare const useAbstraxionSigningClient: () => {
    readonly client: GranteeSignerClient | undefined;
    readonly signArb: ((signerAddress: string, message: string | Uint8Array) => Promise<string>) | undefined;
    readonly logout: (() => void) | undefined;
};

declare const useAbstraxionClient: () => {
    readonly client: CosmWasmClient | undefined;
};

declare const useModal: () => [
    boolean,
    React.Dispatch<React.SetStateAction<boolean>>
];

export { Abstraxion, AbstraxionProvider, ContractGrantDescription, useAbstraxionAccount, useAbstraxionClient, useAbstraxionSigningClient, useModal };
