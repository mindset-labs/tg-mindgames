import { type FastIterable, type FastIterator, Stream } from '@rimbu/stream';
export declare abstract class EmptyBase {
    [Symbol.iterator](): FastIterator<any>;
    assumeNonEmpty(): never;
    stream(): Stream<any>;
    get size(): 0;
    get length(): 0;
    get isEmpty(): true;
    nonEmpty(): false;
    forEach(): void;
    filter(): any;
    remove(): any;
    toArray(): [];
}
export declare abstract class NonEmptyBase<E> implements FastIterable<E> {
    abstract stream(): Stream.NonEmpty<E>;
    [Symbol.iterator](): FastIterator<E>;
    get isEmpty(): false;
    nonEmpty(): true;
    assumeNonEmpty(): this;
    asNormal(): any;
}
