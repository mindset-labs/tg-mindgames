"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/rimbu-error.mts
var rimbu_error_exports = {};
__export(rimbu_error_exports, {
  EmptyCollectionAssumedNonEmptyError: () => EmptyCollectionAssumedNonEmptyError,
  InvalidStateError: () => InvalidStateError,
  InvalidUsageError: () => InvalidUsageError,
  ModifiedBuilderWhileLoopingOverItError: () => ModifiedBuilderWhileLoopingOverItError,
  throwEmptyCollectionAssumedNonEmptyError: () => throwEmptyCollectionAssumedNonEmptyError,
  throwInvalidStateError: () => throwInvalidStateError,
  throwInvalidUsageError: () => throwInvalidUsageError,
  throwModifiedBuilderWhileLoopingOverItError: () => throwModifiedBuilderWhileLoopingOverItError
});
module.exports = __toCommonJS(rimbu_error_exports);
var import_common = require("@rimbu/common");
var EmptyCollectionAssumedNonEmptyError = class extends import_common.ErrBase.CustomError {
  constructor() {
    super("empty collection was assumbed to be non-empty");
  }
};
var ModifiedBuilderWhileLoopingOverItError = class extends import_common.ErrBase.CustomError {
  constructor() {
    super("an attempt was made to modify a builder while looping over it");
  }
};
var InvalidStateError = class extends import_common.ErrBase.CustomError {
  constructor() {
    super(
      "something happend that shouldn't happen, please consider creating an issue"
    );
  }
};
var InvalidUsageError = class extends import_common.ErrBase.CustomError {
};
function throwEmptyCollectionAssumedNonEmptyError() {
  throw new EmptyCollectionAssumedNonEmptyError();
}
function throwModifiedBuilderWhileLoopingOverItError() {
  throw new ModifiedBuilderWhileLoopingOverItError();
}
function throwInvalidStateError() {
  throw new InvalidStateError();
}
function throwInvalidUsageError(msg) {
  throw new InvalidUsageError(msg);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  EmptyCollectionAssumedNonEmptyError,
  InvalidStateError,
  InvalidUsageError,
  ModifiedBuilderWhileLoopingOverItError,
  throwEmptyCollectionAssumedNonEmptyError,
  throwInvalidStateError,
  throwInvalidUsageError,
  throwModifiedBuilderWhileLoopingOverItError
});
