import type { AsyncStream, AsyncStreamable } from '@rimbu/stream/async';
import type { StreamSource } from '@rimbu/stream';
import type { MaybePromise } from '@rimbu/common';
export type AsyncStreamSource<T> = undefined | AsyncStreamSource.NonEmpty<T> | AsyncStream<T> | (() => MaybePromise<AsyncStreamSource<T>>) | AsyncStreamable<T> | StreamSource<T> | AsyncIterable<T>;
export declare namespace AsyncStreamSource {
    type NonEmpty<T> = AsyncStream.NonEmpty<T> | AsyncStreamable.NonEmpty<T> | StreamSource.NonEmpty<T> | (() => MaybePromise<AsyncStreamSource.NonEmpty<T>>);
}
