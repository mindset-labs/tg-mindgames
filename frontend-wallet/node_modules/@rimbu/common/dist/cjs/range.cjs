"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/range.mts
var range_exports = {};
__export(range_exports, {
  Range: () => Range
});
module.exports = __toCommonJS(range_exports);
var Range;
((Range2) => {
  function getNormalizedRange(range) {
    let start = void 0;
    let end = void 0;
    if (`start` in range && void 0 !== range.start) {
      if (Array.isArray(range.start) && range.start.length === 2 && typeof range.start[1] === "boolean") {
        start = range.start;
      } else {
        start = [range.start, true];
      }
    }
    if (`end` in range && void 0 !== range.end) {
      if (Array.isArray(range.end) && range.end.length === 2 && typeof range.end[1] === "boolean") {
        end = range.end;
      } else {
        end = [range.end, true];
      }
    }
    return { start, end };
  }
  Range2.getNormalizedRange = getNormalizedRange;
})(Range || (Range = {}));
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Range
});
