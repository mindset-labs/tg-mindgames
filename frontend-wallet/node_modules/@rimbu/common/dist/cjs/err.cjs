"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/err.mts
var err_exports = {};
__export(err_exports, {
  Err: () => Err,
  ErrBase: () => ErrBase
});
module.exports = __toCommonJS(err_exports);
function Err() {
  return ErrBase.msg("Err: Forced to throw error")();
}
var ErrBase;
((ErrBase2) => {
  class CustomError {
    constructor(message) {
      this.message = message;
    }
    get name() {
      return this.constructor.name;
    }
  }
  ErrBase2.CustomError = CustomError;
  class ForcedError extends CustomError {
  }
  ErrBase2.ForcedError = ForcedError;
  function msg(message) {
    return function() {
      throw new ErrBase2.ForcedError(message);
    };
  }
  ErrBase2.msg = msg;
})(ErrBase || (ErrBase = {}));
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Err,
  ErrBase
});
