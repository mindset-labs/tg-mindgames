/**
* This file was automatically generated by @cosmwasm/ts-codegen@1.11.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Addr = string;
export interface InstantiateMsg {
  base_url: string;
  image_url: string;
  token_contract: Addr;
}
export type ExecuteMsg = {
  lifecycle: ExecuteMsg1;
};
export type ExecuteMsg1 = {
  create_game: {
    config: GameConfig;
  };
} | {
  start_game: {
    game_id: number;
  };
} | {
  join_game: {
    game_id: number;
    telegram_id: string;
  };
} | {
  commit_round: {
    amount?: Uint128 | null;
    game_id: number;
    value: string;
  };
} | {
  commit_round_as_admin: {
    amount?: Uint128 | null;
    game_id: number;
    player: Addr;
    value: string;
  };
} | {
  reveal_round: {
    game_id: number;
    nonce: number;
    value: string;
  };
} | {
  end_game: {
    game_id: number;
  };
};
export type Uint128 = string;
export interface GameConfig {
  game_joining_fee?: Uint128 | null;
  has_turns: boolean;
  max_players?: number | null;
  max_rounds: number;
  min_deposit: Uint128;
  min_players: number;
  round_expiry_duration?: number | null;
  round_reward_multiplier?: number | null;
  skip_reveal: boolean;
}
export type QueryMsg = {
  get_game: {
    game_id: number;
  };
} | {
  get_leaderboard: {};
} | {
  get_current_round: {
    game_id: number;
  };
} | {
  get_game_status: {
    game_id: number;
  };
} | {
  get_games_count: {};
};
export type GameRoundStatus = "pending" | "committed" | "revealed" | "ended";
export interface GameRound {
  commits: [Addr, string, Uint128 | null][];
  expires_at?: number | null;
  id: number;
  reveals: [Addr, string][];
  status: GameRoundStatus;
}
export type GameStatus = "created" | "ready" | "in_progress" | "rounds_finished" | "ended";
export interface Game {
  config: GameConfig;
  creator: Addr;
  current_round: number;
  id: number;
  player_escrow: [Addr, Uint128][];
  players: [Addr, string][];
  rounds: GameRound[];
  scores: {};
  status: GameStatus;
  total_escrow: Uint128;
}
export type Uint64 = number;
export interface Leaderboard {
  leaderboard: [Addr, string, Uint128][];
}